<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="edu.kh.admin.main.model.mapper.AdminMapper">
	<!-- namespace에 연결할 Mapper 인터페이스 패키지명 + 인터페이스 명 작성 -> Mapper 인터페이스 메서드 호출 
		시 xml 파일에 작성된 태그 중 메서드 명과 같은 id를 가진 SQL이 수행됨 -->

	<!-- 로그인 -->
	<select id="login">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PW, AUTHORITY
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_DEL_FL = 'N'
		AND AUTHORITY = 2
	</select>
	
	
	<!-- 탈퇴 회원 조회 -->
	<select id="selectWithdrawnMemberList">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'Y'
		ORDER BY MEMBER_NO DESC
	</select>
	
	<!-- 탈퇴 회원 복구 -->
	<update id="restoreMember">
		UPDATE  "MEMBER" SET
		"MEMBER_DEL_FL" = 'N'
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_DEL_FL = 'Y'
	</update>
	
	<!-- 삭제한 게시글 목록 조회 -->
	<select id="deleteBoardList">
		SELECT
	
			BOARD_NO,
			BOARD_NAME,
			BOARD_TITLE,
			MEMBER_NICKNAME
		
		FROM BOARD b
		JOIN "MEMBER" m ON (b.MEMBER_NO = m.MEMBER_NO)
		JOIN BOARD_TYPE bt ON (b.BOARD_CODE = bt.BOARD_CODE)
		WHERE BOARD_DEL_FL = 'Y'
	</select>
	
	<!-- 삭제한 게시글 복구 -->
	<update id="restoreBoard">
		UPDATE  "BOARD" SET
		BOARD_DEL_FL = 'N'
		WHERE BOARD_NO = #{boardNo}
		AND BOARD_DEL_FL = 'Y'
	</update>
	
	<!-- 새로운 가입 회원 조회 (7일 이내) -->
	<select id="getNewMember">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, ENROLL_DATE
		FROM "MEMBER"
		WHERE ENROLL_DATE >= SYSDATE - 7
		AND AUTHORITY = 1
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<!-- 최대 조회수 게시글 수 조회 
		만약 최대 조회수가 똑같은 게시물이 여러개 존재한다면
		가장 최근에 작성된 게시글 기준(BOARD_NO가 큰순서)으로 정렬해서 조회
	-->
	<select id="maxReadCount">
		SELECT BOARD_NAME, BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT
		FROM "BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "BOARD_TYPE" USING(BOARD_CODE)
		WHERE READ_COUNT = (SELECT MAX(READ_COUNT) FROM "BOARD")
		ORDER BY BOARD_NO DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 가장 좋아요 많은 게시글 -->
	<select id="maxLikeCount">
		SELECT
	
			BOARD_NAME, BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME,
			(SELECT COUNT(*)
			FROM "BOARD_LIKE" L
			WHERE L.BOARD_NO = B.BOARD_NO) "LIKE_COUNT"
		
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "BOARD_TYPE" USING(BOARD_CODE)
		WHERE
		
			(SELECT COUNT(*)
			FROM "BOARD_LIKE" L
			WHERE L.BOARD_NO = B.BOARD_NO) = 
			
			(SELECT MAX(COUNT(*)) 
			FROM "BOARD_LIKE" 
			GROUP BY BOARD_NO)
		
		ORDER BY BOARD_NO DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 가장 댓글 많은 게시글 -->
	<select id="maxCommentCount">
		SELECT
		
			BOARD_NAME, BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME,
			(SELECT COUNT(*)
			FROM "COMMENT" L
			WHERE L.BOARD_NO = B.BOARD_NO) "COMMENT_COUNT"
		
		FROM "BOARD" B
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "BOARD_TYPE" USING(BOARD_CODE)
		WHERE
		
			(SELECT COUNT(*)
			FROM "COMMENT" L
			WHERE L.BOARD_NO = B.BOARD_NO) = 
			
			(SELECT MAX(COUNT(*)) 
			FROM "COMMENT" 
			GROUP BY BOARD_NO)
		
		ORDER BY BOARD_NO DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 관리자 계정 목록 조회 -->
	<select id="adminAccountList">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_TEL
		FROM "MEMBER"
		WHERE AUTHORITY = 2
	</select>
	
	<!-- 관리자 계정 발급 -->
	<insert id="createAdminAccout">
		INSERT INTO "MEMBER" VALUES(
			SEQ_MEMBER_NO.NEXTVAL, 
			#{memberEmail},
			#{memberPw},
			#{memberNickname},
			#{memberTel},
			NULL,
			NULL,
			DEFAULT,
			DEFAULT,
			2
		)
	</insert>
	
	
</mapper>
